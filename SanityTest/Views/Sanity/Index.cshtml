@model SanityTest.Models.SanityIndexViewModel
@{
    ViewBag.Title = "Index";
}
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Sanity Index View</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Choice1, new { @class = "control-label col-md-2" })
                (@Html.Label(Model.Choice1 ?? "<null>"))
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Choice1, Model.Choices, new { @class = "control-label col-md-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Choice2, htmlAttributes: new { @class = "control-label col-md-2" })
                (@Html.Label(Model.Choice2 ?? "<null>"))
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Choice2, Model.Choices, new { @class = "control-label col-md-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Choice3, htmlAttributes: new { @class = "control-label col-md-2" })
                (@Html.Label(Model.Choice3 ?? "<null>"))
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Choice3, Model.Choices, new { @class = "control-label col-md-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Choice4, htmlAttributes: new { @class = "control-label col-md-2" })
                (@Html.Label(Model.Choice4 ?? "<null>"))
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Choice4, Model.Choices, new { @class = "control-label col-md-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Choice5, htmlAttributes: new { @class = "control-label col-md-2" })
                (@Html.Label(Model.Choice5 ?? "<null>"))
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Choice5, Model.Choices, new { @class = "control-label col-md-2" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>